// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MWNetworkData.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MWNetworkData.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class MWNetworkDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MWNetworkData>
     _instance;
} _MWNetworkData_default_instance_;

namespace protobuf_MWNetworkData_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MWNetworkData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MWNetworkData, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MWNetworkData, str_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MWNetworkData, from_usr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MWNetworkData, to_usr_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(MWNetworkData)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_MWNetworkData_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "MWNetworkData.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _MWNetworkData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MWNetworkData_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023MWNetworkData.proto\"Q\n\rMWNetworkData\022\014"
      "\n\004type\030\001 \001(\005\022\020\n\010str_data\030\002 \001(\t\022\020\n\010from_u"
      "sr\030\003 \001(\t\022\016\n\006to_usr\030\004 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 112);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MWNetworkData.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_MWNetworkData_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MWNetworkData::kTypeFieldNumber;
const int MWNetworkData::kStrDataFieldNumber;
const int MWNetworkData::kFromUsrFieldNumber;
const int MWNetworkData::kToUsrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MWNetworkData::MWNetworkData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MWNetworkData_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MWNetworkData)
}
MWNetworkData::MWNetworkData(const MWNetworkData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  str_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.str_data().size() > 0) {
    str_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_data_);
  }
  from_usr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_usr().size() > 0) {
    from_usr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_usr_);
  }
  to_usr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to_usr().size() > 0) {
    to_usr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_usr_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:MWNetworkData)
}

void MWNetworkData::SharedCtor() {
  str_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_usr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_usr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _cached_size_ = 0;
}

MWNetworkData::~MWNetworkData() {
  // @@protoc_insertion_point(destructor:MWNetworkData)
  SharedDtor();
}

void MWNetworkData::SharedDtor() {
  str_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_usr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_usr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MWNetworkData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MWNetworkData::descriptor() {
  protobuf_MWNetworkData_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MWNetworkData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MWNetworkData& MWNetworkData::default_instance() {
  protobuf_MWNetworkData_2eproto::InitDefaults();
  return *internal_default_instance();
}

MWNetworkData* MWNetworkData::New(::google::protobuf::Arena* arena) const {
  MWNetworkData* n = new MWNetworkData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MWNetworkData::Clear() {
// @@protoc_insertion_point(message_clear_start:MWNetworkData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  str_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_usr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_usr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

bool MWNetworkData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MWNetworkData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string str_data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->str_data().data(), static_cast<int>(this->str_data().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MWNetworkData.str_data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_usr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_usr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_usr().data(), static_cast<int>(this->from_usr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MWNetworkData.from_usr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string to_usr = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to_usr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to_usr().data(), static_cast<int>(this->to_usr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MWNetworkData.to_usr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MWNetworkData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MWNetworkData)
  return false;
#undef DO_
}

void MWNetworkData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MWNetworkData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // string str_data = 2;
  if (this->str_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str_data().data(), static_cast<int>(this->str_data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MWNetworkData.str_data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->str_data(), output);
  }

  // string from_usr = 3;
  if (this->from_usr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_usr().data(), static_cast<int>(this->from_usr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MWNetworkData.from_usr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->from_usr(), output);
  }

  // string to_usr = 4;
  if (this->to_usr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to_usr().data(), static_cast<int>(this->to_usr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MWNetworkData.to_usr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->to_usr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MWNetworkData)
}

::google::protobuf::uint8* MWNetworkData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MWNetworkData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // string str_data = 2;
  if (this->str_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str_data().data(), static_cast<int>(this->str_data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MWNetworkData.str_data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->str_data(), target);
  }

  // string from_usr = 3;
  if (this->from_usr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_usr().data(), static_cast<int>(this->from_usr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MWNetworkData.from_usr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->from_usr(), target);
  }

  // string to_usr = 4;
  if (this->to_usr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to_usr().data(), static_cast<int>(this->to_usr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MWNetworkData.to_usr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->to_usr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MWNetworkData)
  return target;
}

size_t MWNetworkData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MWNetworkData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string str_data = 2;
  if (this->str_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->str_data());
  }

  // string from_usr = 3;
  if (this->from_usr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_usr());
  }

  // string to_usr = 4;
  if (this->to_usr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to_usr());
  }

  // int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MWNetworkData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MWNetworkData)
  GOOGLE_DCHECK_NE(&from, this);
  const MWNetworkData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MWNetworkData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MWNetworkData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MWNetworkData)
    MergeFrom(*source);
  }
}

void MWNetworkData::MergeFrom(const MWNetworkData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MWNetworkData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.str_data().size() > 0) {

    str_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_data_);
  }
  if (from.from_usr().size() > 0) {

    from_usr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_usr_);
  }
  if (from.to_usr().size() > 0) {

    to_usr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_usr_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void MWNetworkData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MWNetworkData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MWNetworkData::CopyFrom(const MWNetworkData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MWNetworkData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MWNetworkData::IsInitialized() const {
  return true;
}

void MWNetworkData::Swap(MWNetworkData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MWNetworkData::InternalSwap(MWNetworkData* other) {
  using std::swap;
  str_data_.Swap(&other->str_data_);
  from_usr_.Swap(&other->from_usr_);
  to_usr_.Swap(&other->to_usr_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MWNetworkData::GetMetadata() const {
  protobuf_MWNetworkData_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MWNetworkData_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MWNetworkData

// int32 type = 1;
void MWNetworkData::clear_type() {
  type_ = 0;
}
::google::protobuf::int32 MWNetworkData::type() const {
  // @@protoc_insertion_point(field_get:MWNetworkData.type)
  return type_;
}
void MWNetworkData::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:MWNetworkData.type)
}

// string str_data = 2;
void MWNetworkData::clear_str_data() {
  str_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MWNetworkData::str_data() const {
  // @@protoc_insertion_point(field_get:MWNetworkData.str_data)
  return str_data_.GetNoArena();
}
void MWNetworkData::set_str_data(const ::std::string& value) {
  
  str_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MWNetworkData.str_data)
}
#if LANG_CXX11
void MWNetworkData::set_str_data(::std::string&& value) {
  
  str_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MWNetworkData.str_data)
}
#endif
void MWNetworkData::set_str_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  str_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MWNetworkData.str_data)
}
void MWNetworkData::set_str_data(const char* value, size_t size) {
  
  str_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MWNetworkData.str_data)
}
::std::string* MWNetworkData::mutable_str_data() {
  
  // @@protoc_insertion_point(field_mutable:MWNetworkData.str_data)
  return str_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MWNetworkData::release_str_data() {
  // @@protoc_insertion_point(field_release:MWNetworkData.str_data)
  
  return str_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MWNetworkData::set_allocated_str_data(::std::string* str_data) {
  if (str_data != NULL) {
    
  } else {
    
  }
  str_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), str_data);
  // @@protoc_insertion_point(field_set_allocated:MWNetworkData.str_data)
}

// string from_usr = 3;
void MWNetworkData::clear_from_usr() {
  from_usr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MWNetworkData::from_usr() const {
  // @@protoc_insertion_point(field_get:MWNetworkData.from_usr)
  return from_usr_.GetNoArena();
}
void MWNetworkData::set_from_usr(const ::std::string& value) {
  
  from_usr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MWNetworkData.from_usr)
}
#if LANG_CXX11
void MWNetworkData::set_from_usr(::std::string&& value) {
  
  from_usr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MWNetworkData.from_usr)
}
#endif
void MWNetworkData::set_from_usr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  from_usr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MWNetworkData.from_usr)
}
void MWNetworkData::set_from_usr(const char* value, size_t size) {
  
  from_usr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MWNetworkData.from_usr)
}
::std::string* MWNetworkData::mutable_from_usr() {
  
  // @@protoc_insertion_point(field_mutable:MWNetworkData.from_usr)
  return from_usr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MWNetworkData::release_from_usr() {
  // @@protoc_insertion_point(field_release:MWNetworkData.from_usr)
  
  return from_usr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MWNetworkData::set_allocated_from_usr(::std::string* from_usr) {
  if (from_usr != NULL) {
    
  } else {
    
  }
  from_usr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_usr);
  // @@protoc_insertion_point(field_set_allocated:MWNetworkData.from_usr)
}

// string to_usr = 4;
void MWNetworkData::clear_to_usr() {
  to_usr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MWNetworkData::to_usr() const {
  // @@protoc_insertion_point(field_get:MWNetworkData.to_usr)
  return to_usr_.GetNoArena();
}
void MWNetworkData::set_to_usr(const ::std::string& value) {
  
  to_usr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MWNetworkData.to_usr)
}
#if LANG_CXX11
void MWNetworkData::set_to_usr(::std::string&& value) {
  
  to_usr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MWNetworkData.to_usr)
}
#endif
void MWNetworkData::set_to_usr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  to_usr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MWNetworkData.to_usr)
}
void MWNetworkData::set_to_usr(const char* value, size_t size) {
  
  to_usr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MWNetworkData.to_usr)
}
::std::string* MWNetworkData::mutable_to_usr() {
  
  // @@protoc_insertion_point(field_mutable:MWNetworkData.to_usr)
  return to_usr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MWNetworkData::release_to_usr() {
  // @@protoc_insertion_point(field_release:MWNetworkData.to_usr)
  
  return to_usr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MWNetworkData::set_allocated_to_usr(::std::string* to_usr) {
  if (to_usr != NULL) {
    
  } else {
    
  }
  to_usr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to_usr);
  // @@protoc_insertion_point(field_set_allocated:MWNetworkData.to_usr)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
