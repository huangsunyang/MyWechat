// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "MWNetworkData.pb.h"
// @@protoc_insertion_point(imports)

@implementation MwnetworkDataRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [MwnetworkDataRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface MWNetworkData ()
@property SInt32 type;
@property (strong) NSString* strData;
@property (strong) NSString* fromUsr;
@property (strong) NSString* toUsr;
@end

@implementation MWNetworkData

- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) _value_ {
  hasType_ = !!_value_;
}
@synthesize type;
- (BOOL) hasStrData {
  return !!hasStrData_;
}
- (void) setHasStrData:(BOOL) _value_ {
  hasStrData_ = !!_value_;
}
@synthesize strData;
- (BOOL) hasFromUsr {
  return !!hasFromUsr_;
}
- (void) setHasFromUsr:(BOOL) _value_ {
  hasFromUsr_ = !!_value_;
}
@synthesize fromUsr;
- (BOOL) hasToUsr {
  return !!hasToUsr_;
}
- (void) setHasToUsr:(BOOL) _value_ {
  hasToUsr_ = !!_value_;
}
@synthesize toUsr;
- (instancetype) init {
  if ((self = [super init])) {
    self.type = 0;
    self.strData = @"";
    self.fromUsr = @"";
    self.toUsr = @"";
  }
  return self;
}
static MWNetworkData* defaultMWNetworkDataInstance = nil;
+ (void) initialize {
  if (self == [MWNetworkData class]) {
    defaultMWNetworkDataInstance = [[MWNetworkData alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultMWNetworkDataInstance;
}
- (instancetype) defaultInstance {
  return defaultMWNetworkDataInstance;
}
- (BOOL) isInitialized {
  if (!self.hasType) {
    return NO;
  }
  if (!self.hasStrData) {
    return NO;
  }
  if (!self.hasFromUsr) {
    return NO;
  }
  if (!self.hasToUsr) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasType) {
    [output writeInt32:1 value:self.type];
  }
  if (self.hasStrData) {
    [output writeString:2 value:self.strData];
  }
  if (self.hasFromUsr) {
    [output writeString:3 value:self.fromUsr];
  }
  if (self.hasToUsr) {
    [output writeString:4 value:self.toUsr];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasType) {
    size_ += computeInt32Size(1, self.type);
  }
  if (self.hasStrData) {
    size_ += computeStringSize(2, self.strData);
  }
  if (self.hasFromUsr) {
    size_ += computeStringSize(3, self.fromUsr);
  }
  if (self.hasToUsr) {
    size_ += computeStringSize(4, self.toUsr);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (MWNetworkData*) parseFromData:(NSData*) data {
  return (MWNetworkData*)[[[MWNetworkData builder] mergeFromData:data] build];
}
+ (MWNetworkData*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MWNetworkData*)[[[MWNetworkData builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MWNetworkData*) parseFromInputStream:(NSInputStream*) input {
  return (MWNetworkData*)[[[MWNetworkData builder] mergeFromInputStream:input] build];
}
+ (MWNetworkData*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MWNetworkData*)[[[MWNetworkData builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MWNetworkData*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MWNetworkData*)[[[MWNetworkData builder] mergeFromCodedInputStream:input] build];
}
+ (MWNetworkData*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MWNetworkData*)[[[MWNetworkData builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MWNetworkDataBuilder*) builder {
  return [[MWNetworkDataBuilder alloc] init];
}
+ (MWNetworkDataBuilder*) builderWithPrototype:(MWNetworkData*) prototype {
  return [[MWNetworkData builder] mergeFrom:prototype];
}
- (MWNetworkDataBuilder*) builder {
  return [MWNetworkData builder];
}
- (MWNetworkDataBuilder*) toBuilder {
  return [MWNetworkData builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", [NSNumber numberWithInteger:self.type]];
  }
  if (self.hasStrData) {
    [output appendFormat:@"%@%@: %@\n", indent, @"strData", self.strData];
  }
  if (self.hasFromUsr) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fromUsr", self.fromUsr];
  }
  if (self.hasToUsr) {
    [output appendFormat:@"%@%@: %@\n", indent, @"toUsr", self.toUsr];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.type] forKey: @"type"];
  }
  if (self.hasStrData) {
    [dictionary setObject: self.strData forKey: @"strData"];
  }
  if (self.hasFromUsr) {
    [dictionary setObject: self.fromUsr forKey: @"fromUsr"];
  }
  if (self.hasToUsr) {
    [dictionary setObject: self.toUsr forKey: @"toUsr"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[MWNetworkData class]]) {
    return NO;
  }
  MWNetworkData *otherMessage = other;
  return
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      self.hasStrData == otherMessage.hasStrData &&
      (!self.hasStrData || [self.strData isEqual:otherMessage.strData]) &&
      self.hasFromUsr == otherMessage.hasFromUsr &&
      (!self.hasFromUsr || [self.fromUsr isEqual:otherMessage.fromUsr]) &&
      self.hasToUsr == otherMessage.hasToUsr &&
      (!self.hasToUsr || [self.toUsr isEqual:otherMessage.toUsr]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.type] hash];
  }
  if (self.hasStrData) {
    hashCode = hashCode * 31 + [self.strData hash];
  }
  if (self.hasFromUsr) {
    hashCode = hashCode * 31 + [self.fromUsr hash];
  }
  if (self.hasToUsr) {
    hashCode = hashCode * 31 + [self.toUsr hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface MWNetworkDataBuilder()
@property (strong) MWNetworkData* resultMwnetworkData;
@end

@implementation MWNetworkDataBuilder
@synthesize resultMwnetworkData;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultMwnetworkData = [[MWNetworkData alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultMwnetworkData;
}
- (MWNetworkDataBuilder*) clear {
  self.resultMwnetworkData = [[MWNetworkData alloc] init];
  return self;
}
- (MWNetworkDataBuilder*) clone {
  return [MWNetworkData builderWithPrototype:resultMwnetworkData];
}
- (MWNetworkData*) defaultInstance {
  return [MWNetworkData defaultInstance];
}
- (MWNetworkData*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MWNetworkData*) buildPartial {
  MWNetworkData* returnMe = resultMwnetworkData;
  self.resultMwnetworkData = nil;
  return returnMe;
}
- (MWNetworkDataBuilder*) mergeFrom:(MWNetworkData*) other {
  if (other == [MWNetworkData defaultInstance]) {
    return self;
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasStrData) {
    [self setStrData:other.strData];
  }
  if (other.hasFromUsr) {
    [self setFromUsr:other.fromUsr];
  }
  if (other.hasToUsr) {
    [self setToUsr:other.toUsr];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MWNetworkDataBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MWNetworkDataBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setType:[input readInt32]];
        break;
      }
      case 18: {
        [self setStrData:[input readString]];
        break;
      }
      case 26: {
        [self setFromUsr:[input readString]];
        break;
      }
      case 34: {
        [self setToUsr:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasType {
  return resultMwnetworkData.hasType;
}
- (SInt32) type {
  return resultMwnetworkData.type;
}
- (MWNetworkDataBuilder*) setType:(SInt32) value {
  resultMwnetworkData.hasType = YES;
  resultMwnetworkData.type = value;
  return self;
}
- (MWNetworkDataBuilder*) clearType {
  resultMwnetworkData.hasType = NO;
  resultMwnetworkData.type = 0;
  return self;
}
- (BOOL) hasStrData {
  return resultMwnetworkData.hasStrData;
}
- (NSString*) strData {
  return resultMwnetworkData.strData;
}
- (MWNetworkDataBuilder*) setStrData:(NSString*) value {
  resultMwnetworkData.hasStrData = YES;
  resultMwnetworkData.strData = value;
  return self;
}
- (MWNetworkDataBuilder*) clearStrData {
  resultMwnetworkData.hasStrData = NO;
  resultMwnetworkData.strData = @"";
  return self;
}
- (BOOL) hasFromUsr {
  return resultMwnetworkData.hasFromUsr;
}
- (NSString*) fromUsr {
  return resultMwnetworkData.fromUsr;
}
- (MWNetworkDataBuilder*) setFromUsr:(NSString*) value {
  resultMwnetworkData.hasFromUsr = YES;
  resultMwnetworkData.fromUsr = value;
  return self;
}
- (MWNetworkDataBuilder*) clearFromUsr {
  resultMwnetworkData.hasFromUsr = NO;
  resultMwnetworkData.fromUsr = @"";
  return self;
}
- (BOOL) hasToUsr {
  return resultMwnetworkData.hasToUsr;
}
- (NSString*) toUsr {
  return resultMwnetworkData.toUsr;
}
- (MWNetworkDataBuilder*) setToUsr:(NSString*) value {
  resultMwnetworkData.hasToUsr = YES;
  resultMwnetworkData.toUsr = value;
  return self;
}
- (MWNetworkDataBuilder*) clearToUsr {
  resultMwnetworkData.hasToUsr = NO;
  resultMwnetworkData.toUsr = @"";
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
